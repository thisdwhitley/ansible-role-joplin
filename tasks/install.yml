---
# this will just pull down the script provided by the developer, run it, remove

#####
# version=$(wget -qO - "https://api.github.com/repos/laurent22/joplin/releases/latest" | grep -Po '"tag_name": "v\K.*?(?=")')
- name: install| scrape URL for latest version [{{ user.username }}]
  uri:
    url: https://api.github.com/repos/laurent22/joplin/releases/latest
    return_content: true
  register: latest

- name: install| split it out [{{ user.username }}]
  set_fact:
    latest_version: "{{ latest.json.tag_name | regex_replace('v') }}"

#####
# if [[ ! -e ~/.joplin/VERSION ]] || [[ $(< ~/.joplin/VERSION) != "$version" ]]; then
- name: install| check if ~/.joplin/VERSION exists [{{ user.username }}]
  stat:
    path: ~/.joplin/VERSION
  register: VERSION_file

- name: install| check the contents of ~/.joplin/VERSION [{{ user.username }}]
  set_fact:
    VERSION_contents: "{{ lookup('file', '/home/{{ user.username }}/.joplin/VERSION') }}"
  when: VERSION_file.stat.exists

- name: install| when there is no VERSION or it's contents don't match, do these
  block:
    #####
    #  rm -f ~/.joplin/*.AppImage ~/.local/share/applications/joplin.desktop ~/.local/share/applications/appimagekit-joplin.desktop ~/.joplin/VERSION
    - name: install| delete previous version [{{ user.username }}]
      file:
        name: "{{ item }}"
        state: absent
      with_items:
        - ~/.joplin/*.AppImage
        - ~/.local/share/applications/joplin.desktop
        - ~/.local/share/applications/appimagekit-joplin.desktop
        - ~/.joplin/VERSION
    #####
    # mkdir -p ~/.joplin/
    - name: install| creates the folder where the binary will be stored [{{ user.username }}]
      file:
        name: ~/.joplin
        state: directory
    #####
    # wget -nv --show-progress -O ~/.joplin/Joplin.AppImage https://github.com/laurent22/joplin/releases/download/v$version/Joplin-$version-x86_64.AppImage 
    # chmod +x ~/.joplin/Joplin.AppImage
    - name: install| download the latest version [{{ user.username }}]
      get_url:
        url: https://github.com/laurent22/joplin/releases/download/v{{ latest_version }}/Joplin-{{ latest_version }}.AppImage
        dest: ~/.joplin/Joplin.AppImage
        mode: 0755
    #####
    # wget -nv -O ~/.joplin/Icon512.png https://joplinapp.org/images/Icon512.png
    - name: install| download the icon [{{ user.username }}]
      get_url:
        url: https://joplinapp.org/images/Icon512.png
        dest: ~/.joplin/Icon512.png
    ############################################################################
    # I am going to skip all the logic attempting to find what desktop manager
    # is being used and just template out this icon...
    ############################################################################
    #####
    # (cd $TMPDIR && ~/.joplin/Joplin.AppImage --appimage-extract joplin.desktop &> /dev/null)
#    - name: install| extract the AppImage to find buildid [{{ user.username }}]
#      shell: cd /tmp && ~/.joplin/Joplin.AppImage --appimage-extract joplin.desktop &> /dev/null
    #####
    # APPIMAGE_VERSION=$(grep "^X-AppImage-BuildId=" $TMPDIR/squashfs-root/joplin.desktop | head -n 1 | cut -d " " -f 1)
#    - name: install| capture the BuildId from the AppImage itself [{{ user.username }}]
#      command: awk '/^X-AppImage-BuildId=/ {print $1;exit;}' /tmp/squashfs-root/joplin.desktop
#      register: BUILDID_line
    #####
    # rm -rf $TMPDIR/squashfs-root
    - name: install| remove the extracted files [{{ user.username }}]
      file:
        path: /tmp/squashfs-root
        state: absent
    #####
    # mkdir -p ~/.local/share/applications
    - name: install| create the desktop icon directory [{{ user.username }}]
      file:
        path: ~/.local/share/applications
        state: directory
    #####
    # echo -e "[Desktop Entry]\nEncoding=UTF-8\nName=Joplin\nComment=Joplin for Desktop\nExec=/home/$USER/.joplin/Joplin.AppImage\nIcon=/home/$USER/.joplin/Icon512.png\nStartupWMClass=Joplin\nType=Application\nCategories=Application;\n$APPIMAGE_VERSION" >> ~/.local/share/applications/appimagekit-joplin.desktop
    - name: install| template out the desktop file [{{ user.username }}]
      template:
        src: joplin-desktop.j2
        dest: ~/.local/share/applications/appimagekit-joplin.desktop
    #####
    # echo $version > ~/.joplin/VERSION
    - name: install| add VERSION file [{{ user.username }}]
      copy:
        content: "{{ latest_version }}"
        dest: ~/.joplin/VERSION
  when: (not VERSION_file.stat.exists) or 
        (VERSION_contents != latest_version)
